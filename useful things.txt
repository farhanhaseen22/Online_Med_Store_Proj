First, redirect the output of pip freeze to a file named requirements.txt.

pip freeze > requirements.txt

Next, copy or move this requirements.txt to the other environment and use it to install the packages.

pip install -r requirements.txt
pip uninstall -y -r requirements.txt

===================Create & Start virtual environment==========================

py -m venv venv
venv\Scripts\activate

===============================================================================

Now execute these commands:
$ python manage.py shell

Then the interactive python shell with django powers will appear. Then type in:
$ from django.contrib.auth.models import User
$ User.objects.get(username="NameHere", is_superuser=True).delete()

You should replace the name of the superuser you created with NameHere in the last command.

====================================================================================================

python manage.py createsuperuser

.\venv\Scripts\activate
python manage.py runserver

Go to http://127.0.0.1:8000/admin/

====================================================================================================
create database Medistore;

python manage.py makemigrations store --name ADDED_NEW_COLUMN_type_of_illness

python manage.py makemigrations

python manage.py showmigrations

====================================================================================================
git remote rm origin

git remote add origin

Username and Password don't work anymore, 
instead you have to use your Personal access tokens, like so,
set-url
git remote get-url origin
git remote add origin https://PERSONAL_ACCESS_TOKEN@https://github.com/farhanhaseen22/Online_Med_Store_Proj.git

====================================================================================================
List your git config:

git config --list
git config --list --show-origin

Change username and email global:

git config --global user.name ""
git config --global user.email ""

Change username and email for current repo:

git config  user.name ""
git config  user.email ""


rm store/migrations/0019_ALTERED_also_tryin_todeluserid.py

rm store/migrations/0021_auto_20231126_1852.py

"E:\\6th Semester - Spring - MUN - 2023\\ENGI 981B\\Medistore_cln\\venv",

create database Medistore;

use medistore;





class FullOrder(models.Model):

    user = models.ForeignKey(User,on_delete=models.CASCADE,null=True)
    recepient_fullname = models.CharField(max_length=100, null=True, blank=False)
    phone_no = models.IntegerField(null=True, blank=False)
    address_line1 = models.CharField(max_length=200, null=True, blank=False)
    address_line2 = models.CharField(max_length=100, null=True, blank=True)
    city = models.CharField(max_length=200, null=True,blank=False)
    state = models.CharField(max_length=200, null=True,blank=False)
    country = models.CharField(max_length=100, null=True, blank=False)
    zipcode = models.CharField(max_length=200, null=True,blank=False)
    amount = models.IntegerField(null=True,blank=True)
    transaction_id = models.CharField(max_length=100,null=True,blank=False)
    date_ordered = models.DateTimeField(auto_now_add=True,null=True,blank=True)

    def __str__(self):
        return '{}-{}'.format(self.user.username,self.transaction_id)



class Purchased_Item(models.Model):

    user = models.ForeignKey(User,on_delete=models.CASCADE,null=True)
    order = models.ForeignKey(FullOrder,on_delete=models.CASCADE,null=True)
    quantity = models.IntegerField(default=0, blank=True, null=True)
    name = models.CharField(max_length=100, blank=False, name=False)
    price = models.FloatField(blank=False, null=True)
    image = models.ImageField(null=True, blank=True)
    description = models.TextField(null=True, blank=True)

    @property
    def get_imageURL(self):
        try:
            url = self.image.url
        except:
            url = ''
        return url

    @property
    def get_total(self):
        total = self.price * self.quantity
        return total

    def __str__(self):
        return self.name